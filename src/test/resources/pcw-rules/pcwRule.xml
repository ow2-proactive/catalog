<?xml version="1.0" encoding="UTF-8"?>
<rule
		xmlns="urn:proactive:ruledescriptor:dev" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="urn:proactive:ruledescriptor:dev /org/ow2/proactive/cloud_watch/ruledescriptor/dev/ruleschema.xsd">
   <name>CPURule</name>   
   
   <variables>
		<variable name="nodeUrlVar" value="localhost" />
		<variable name="pathToCredentialFileVar" value="/config/authentication/admin.cred" />
		<variable name="actionNameVar" value="CPURuleAction" />
		<variable name="thresholdCPUMetric" value="70" />
		<variable name="pollingPeriodInSecondsVar" value="5" />
		<variable name="calmPeriodInSecondsVar" value="10" />
	   <variable name="totalCPUMetric" value="sigar:Type=Cpu Total" />
	</variables>
  	  
	<ruleImplementation>
		<pollingClass value="Jmx_Metrics">
			<parameters>   
				<parameter name="jmxCredentialsFile" value="#pathToCredentialFileVar" />
				<parameter name="nodeUrl" value="#nodeUrlVar" />
				<parameter name="pollingPeriodInSeconds" value="#pollingPeriodInSecondsVar" />
				<parameter name="calmPeriodInSeconds" value="#calmPeriodInSecondsVar" />
			</parameters>
		</pollingClass>
		<kpis> <kpi>#totalCPUMetric</kpi> </kpis>
		<droolContent>  	 
 <![CDATA[
package org.ow2.proactive.cloud_watch.rules 
 import java.util.*;  
 import  org.ow2.proactive.cloud_watch.model.*; 
import  org.ow2.proactive.cloud_watch.service.*; 
global org.ow2.proactive.cloud_watch.action.ActionExecutor actionExecutorCloudAutomationService; 
declare isNodeAction 
 nodeMetrics: NodeMetrics 
end 
 
rule CPURule when
  exists  kpi : NodeMetrics( url == "#nodeUrlVar" )
  $metric : NodeMetrics(metrics["#totalCPUMetric"]  > #thresholdCPUMetric) 
 
then 
    System.out.println("In then condition of cpu limit rule"); 
    Map<String, String> parameters = new HashMap(); 
    parameters.put("credentialsPath","#pathToCredentialFileVar");
    actionExecutorCloudAutomationService.execute(parameters, "CPURule", "#actionNameVar");
end 
]]>
   </droolContent>
	</ruleImplementation>
</rule>